/* map.jsÔºàË®ÄË™ûÂàáÊõøÂØæÂøú„ÉªÂ∑Æ„ÅóÊõø„ÅàÁâàÔºâ
 * ÁõÆÁöÑÔºö
 *  - Êó¢Â≠òÊ©üËÉΩÁ∂≠ÊåÅÔºö„Çπ„Çø„É≥„ÉóÂ∏≥„ÄÅ„Ç≥„É≥„Éó„É™„Éº„ÉàË°®Á§∫„ÄÅ„Ç´„É°„É©Ëµ∑Âãï„ÅÆÂÜôÁúü„Ç∞„É™„ÉÉ„Éâ„ÄÅ8th Wall Ëµ∑Âãï
 *  - Ë®ÄË™ûÂàáÊõøÔºàÊó•Êú¨Ë™û/EnglishÔºâÔºö„ÉÜ„Ç≠„Çπ„Éà„ÅÆ„ÅøÂãïÁöÑÁΩÆÊèõÔºàlocalStorage „Å´‰øùÂ≠òÔºâ
 */

const $  = (s)=>document.querySelector(s);
const $$ = (s)=>Array.from(document.querySelectorAll(s));

/* ====== Ë®ÄË™ûË®≠ÂÆö ====== */
const LANG_KEY = 'lang';
function getLang(){ try{ return localStorage.getItem(LANG_KEY) || 'ja'; } catch{ return 'ja'; } }
function setLang(lang){ try{ localStorage.setItem(LANG_KEY, lang); } catch{} }

const I18N = {
  ja: {
    docTitle: '„Éû„ÉÉ„Éó | AR„Çπ„Çø„É≥„Éó„É©„É™„Éº',
    termsLink: '„Éó„É©„Ç§„Éê„Ç∑„Éº„Éù„É™„Ç∑„Éº„Éª„ÅîÂà©Áî®‰∏ä„ÅÆÊ≥®ÊÑè',
    tutorialLink: '„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´',
    stampbookTitle: '„Çπ„Çø„É≥„ÉóÂ∏≥',
    notCollected: 'Êú™ÂèñÂæó',
    collectedMark: '‚úÖÂèñÂæóÊ∏à',
    completeLink: 'üéâ „Ç≥„É≥„Éó„É™„Éº„Éà„ÇíÁ¢∫Ë™ç„Åô„Çã',
    specialLink: 'üåü „Çπ„Éö„Ç∑„É£„É´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíË¶ã„Çã',
    mapHint: 'Âú∞Âõ≥„ÅÆ„Éî„É≥„Çí„Çø„ÉÉ„Éó„Åô„Çã„Å®„Çπ„Çø„É≥„ÉóÈÖçÁΩÆÂ†¥ÊâÄ„Åæ„Åß„ÅÆÊ°àÂÜÖ„ÅåÂá∫„Åæ„ÅôÔºÅÔºàÂà•„Ç¢„Éó„É™„Å∏ÁßªÂãïÔºâ',
    camChooserTitle: '„Çπ„Éù„ÉÉ„Éà„ÇíÈÅ∏„Çì„Åß„Åè„Å†„Åï„ÅÑ',
    camChooserDesc: 'ÂÜôÁúü„Çí„Çø„ÉÉ„Éó„Åô„Çã„Å®AR„ÅåËµ∑Âãï„Åó„Åæ„Åô„ÄÇ',
    close: 'Èñâ„Åò„Çã',
    cameraStart: '„Ç´„É°„É©Ëµ∑Âãï',
    completeTitle: 'üéâ „Ç≥„É≥„Éó„É™„Éº„ÉàÔºÅ',
    completeLead: 'ÂÖ®„Å¶„ÅÆ„Çπ„Çø„É≥„Éó„ÇíÈõÜ„ÇÅ„Åæ„Åó„Åü„ÄÇ„ÅîÂèÇÂä†„ÅÇ„Çä„Åå„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ',
    backToMap: '„Éû„ÉÉ„Éó„Å´Êàª„Çã',
    toSurvey: '„Ç¢„É≥„Ç±„Éº„Éà„Å∏Ôºà„ÅäÁ≠î„Åà„ÅÑ„Åü„Å†„ÅÑ„ÅüÊñπ„Å´„ÅØ„Çπ„Éö„Ç∑„É£„É´„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Åå„ÅÇ„Çä„Åæ„ÅôÔºÅÔºâ',
    spots: {
      spot1: 'Êú¨È§®173Ââç',
      spot2: '„Éà„É≠„Ç§„É§„ÉºË®òÂøµÈ§®ÔºàTÈ§®ÔºâÂâç',
      spot3: 'Â≠¶ÁîüÈ£üÂ†ÇÔºà„Ç¨„ÉÉ„Ç≠ÔºâÂâç',
      spot4: '„ÉÅ„É£„Éö„É´Ââç',
      spot5: '‰ΩìËÇ≤È§®ÔºàPec-AÔºâÂâç',
      spot6: 'Êú¨È§®307Ââç',
    }
  },
  en: {
    docTitle: 'Map | AR Stamp Rally',
    termsLink: 'Privacy Policy & Notes',
    tutorialLink: 'Tutorial',
    stampbookTitle: 'Stamp Book',
    notCollected: 'Not collected',
    collectedMark: 'Collected',
    completeLink: 'üéâ View ‚ÄúComplete‚Äù',
    specialLink: 'üåü View Special Contents',
    mapHint: 'Tap a map pin to open directions to the stamp location (opens external app).',
    camChooserTitle: 'Choose a Spot',
    camChooserDesc: 'Tap a photo to launch AR.',
    close: 'Close',
    cameraStart: 'Open Camera',
    completeTitle: 'üéâ Complete!',
    completeLead: 'You collected all stamps. Thank you for participating!',
    backToMap: 'Back to Map',
    toSurvey: 'Go to Survey (Special contents after answering!)',
    spots: {
      spot1: 'In Front of Main Hall 173',
      spot2: 'In Front of Troyer Memorial (T Bldg.)',
      spot3: 'In Front of Student Cafeteria',
      spot4: 'In Front of Chapel',
      spot5: 'In Front of Gymnasium (Pec-A)',
      spot6: 'In Front of Main Hall 307',
    }
  }
};

/* ====== 8th Wall ÂÅ¥ URLÔºàË¶ÅÁΩÆÊèõÔºâ ====== */
const EIGHTHWALL_URLS = {
  spot1: 'https://maria261081.8thwall.app/spot1/',
  spot2: 'https://maria261081.8thwall.app/spot2/',
  spot3: 'https://maria261081.8thwall.app/spot3/',
  spot4: 'https://maria261081.8thwall.app/spot4/',
  spot5: 'https://maria261081.8thwall.app/spot5/',
  spot6: 'https://maria261081.8thwall.app/spot6/'
};

const ALL_SPOTS       = ['spot1','spot2','spot3','spot4','spot5','spot6'];
const AR_SPOTS        = ALL_SPOTS.slice();
const COMPLETE_TARGET = 6;

/* ====== Ë°®Á§∫ÂêçÔºàË®ÄË™ûÈÄ£ÂãïÔºâ„ÉªÂÜôÁúü„Éë„Çπ ====== */
function spotLabel(spotId){
  const lang = getLang();
  return I18N[lang].spots[spotId] || spotId.toUpperCase();
}
const photoSrc = (spotId) => {
  const nn = String(spotId.replace('spot','')).padStart(2,'0');
  // Êã°ÂºµÂ≠ê„ÅØ JPG ÊÉ≥ÂÆöÔºàÂøÖË¶Å„Å™„Çâ .jpg „Å´Âêà„Çè„Åõ„ÇãÔºâ
  return `assets/images/current_photos/spot${nn}.JPG`;
};

/* ====== LocalStorage util ====== */
function lsGet(k){ try{return localStorage.getItem(k);}catch{return null;} }
function lsSet(k,v){ try{localStorage.setItem(k,v);}catch{} }
function lsKeyStamp(uid, spot){ return `stamp_${uid}_${spot}`; }
function seenKey(uid){ return `complete_6_seen_${uid}`; }

/* ====== AuthÔºàÂåøÂêçÔºâ ====== */
async function ensureAnonSafe() {
  if (typeof window.ensureAnon === 'function') {
    try { const uid = await window.ensureAnon(); if (uid) return uid; } catch(e){}
  }
  try {
    if (!firebase?.apps?.length && typeof firebaseConfig !== 'undefined') {
      firebase.initializeApp(firebaseConfig);
    }
    const auth = firebase.auth();
    if (auth.currentUser) return auth.currentUser.uid;
    const cred = await auth.signInAnonymously();
    return cred.user && cred.user.uid;
  } catch(e) {
    console.warn('[map] ensureAnon fallback failed:', e?.message||e);
    return lsGet('uid') || null;
  }
}

/* ====== „Çπ„Çø„É≥„ÉóÂèñÂæóÁä∂ÊÖã„ÅÆÂèñÂæó ====== */
async function fetchStamps(uid) {
  let remote = null;
  try {
    const snap = await firebase.database().ref(`users/${uid}/stamps`).once('value');
    remote = snap && snap.val ? snap.val() : null;
  } catch(e) {
    console.warn('[map] fetch stamps remote failed:', e?.message||e);
  }

  const stamps = {};
  ALL_SPOTS.forEach(id=>{
    const local = lsGet(lsKeyStamp(uid,id)) === 'true';
    stamps[id] = (remote && !!remote[id]) || local || false;
  });
  return stamps;
}

/* ====== i18n „ÇíÁîªÈù¢„Å´ÈÅ©Áî® ====== */
function applyI18n(){
  const lang = getLang();
  const t = I18N[lang];

  // <html lang="">
  try { document.documentElement.setAttribute('lang', lang); } catch {}

  // „Çø„Ç§„Éà„É´
  document.title = t.docTitle;

  // ‰∏äÈÉ®„É™„É≥„ÇØÔºè„É©„Éô„É´
  $('#termsLink') && ($('#termsLink').textContent = t.termsLink);
  $('#tutorialLink') && ($('#tutorialLink').textContent = t.tutorialLink);
  $('#stampbookTitle') && ($('#stampbookTitle').textContent = t.stampbookTitle);

  // Âú∞Âõ≥„Éí„É≥„Éà
  $('#mapHint') && ($('#mapHint').textContent = t.mapHint);

  // „Ç´„É°„É©ÈÅ∏Êäû„É¢„Éº„ÉÄ„É´
  $('#cameraChooserTitle') && ($('#cameraChooserTitle').textContent = t.camChooserTitle);
  $('#cameraChooserDesc') && ($('#cameraChooserDesc').textContent = t.camChooserDesc);
  $('#cameraChooserClose') && ($('#cameraChooserClose').textContent = t.close);
  $('#cameraBtn') && ($('#cameraBtn').textContent = t.cameraStart);

  // ÂÆåËµ∞„É¢„Éº„ÉÄ„É´
  $('#completeTitle') && ($('#completeTitle').textContent = t.completeTitle);
  $('#completeLead') && ($('#completeLead').textContent = t.completeLead);
  $('#closeComplete') && ($('#closeComplete').textContent = t.backToMap);
  $('#toSurvey') && ($('#toSurvey').textContent = t.toSurvey);

  // „Ç§„É≥„É©„Ç§„É≥„É™„É≥„ÇØÔºàË¶ãÂá∫„ÅóÁõ¥‰∏ãÔºâ
  $('#completeLink') && ($('#completeLink').textContent = t.completeLink);
  $('#specialLink') && ($('#specialLink').textContent = t.specialLink);

  // „Çπ„Çø„É≥„ÉóÂ∏≥„ÅÆ„Çπ„Éù„ÉÉ„ÉàÂêç
  $$('[data-spot-name]').forEach(el=>{
    const id = el.getAttribute('data-spot-name');
    el.textContent = spotLabel(id);
  });

  // ÂèñÂæó/Êú™ÂèñÂæóË°®Á§∫„ÅØ renderStampUI ÂÜÖ„ÅßÔºàË®ÄË™ûÈÄ£ÂãïÔºâ
}

/* ====== „Çπ„Çø„É≥„ÉóÂ∏≥ UI ÂèçÊò† ====== */
function renderStampUI(stamps){
  const lang = getLang();
  const t = I18N[lang];

  $$('.stamp-cell[data-spot]').forEach(cell=>{
    const spot = cell.dataset.spot;
    const got  = !!stamps[spot];
    cell.classList.toggle('is-got', got);
    const mark = cell.querySelector('.mark');
    if (mark) mark.textContent = got ? t.collectedMark : t.notCollected;
  });

  const cnt = ALL_SPOTS.reduce((n,id)=> n + (stamps[id] ? 1 : 0), 0);
  const elCount = $('#stampCount');
  if (elCount) elCount.textContent = `${cnt}/${ALL_SPOTS.length}`;

  const inline = $('#completeInline');
  if (inline) inline.style.display = (cnt >= COMPLETE_TARGET) ? 'block' : 'none';

  const special = $('#specialInline');
  if (special) special.style.display = (cnt >= COMPLETE_TARGET) ? 'block' : 'none';
}

/* ====== ÂÆåËµ∞„É¢„Éº„ÉÄ„É´ ====== */
function openCompleteModal(){
  $('#completeOverlay')?.classList.add('is-open');
  $('#completeModal')?.classList.add('is-open');
}
function closeCompleteModal(){
  $('#completeOverlay')?.classList.remove('is-open');
  $('#completeModal')?.classList.remove('is-open');
}
function bindCompleteModalButtons(){
  $('#closeComplete')?.addEventListener('click', closeCompleteModal);
  $('#completeOverlay')?.addEventListener('click', closeCompleteModal);
}
function countCollected(stamps){
  return ALL_SPOTS.reduce((acc,id)=> acc + (stamps[id] ? 1 : 0), 0);
}
async function handleCompletionFlow(uid, stamps){
  const got = countCollected(stamps);
  if (got < COMPLETE_TARGET) return;
  if (lsGet(seenKey(uid)) === 'true') return; // ÂàùÂõû„ÅÆ„Åø
  openCompleteModal();
  lsSet(seenKey(uid), 'true');
}

/* ====== „Ç´„É°„É©Ëµ∑ÂãïÔºà„Çπ„Éù„ÉÉ„ÉàÈÅ∏ÊäûÔºöÂÜôÁúü„Ç∞„É™„ÉÉ„ÉâÔºâ ====== */
function buildCameraChooserItems(){
  const list = $('#cameraChooserList');
  if (!list) return;
  list.innerHTML = '';

  ALL_SPOTS.forEach((id)=>{
    const name = spotLabel(id);
    const src  = photoSrc(id);

    const item = document.createElement('div');
    item.className = 'item';
    item.innerHTML = `
      <a class="photoLink" href="#" data-spot="${id}" aria-label="${name}">
        <div class="thumbWrap">
          <img loading="lazy" src="${src}" alt="${name}">
          <div class="label">${name}</div>
        </div>
      </a>
    `;
    list.appendChild(item);
  });

  // ÁîªÂÉè„ÇØ„É™„ÉÉ„ÇØ„Åß AR Ëµ∑Âãï
  list.querySelectorAll('a.photoLink[data-spot]').forEach(a=>{
    a.addEventListener('click', async (ev)=>{
      ev.preventDefault();
      const spot = a.getAttribute('data-spot');
      const base = EIGHTHWALL_URLS[spot];
      if (!base) { alert('„Åì„ÅÆ„Çπ„Éù„ÉÉ„Éà„ÅÆAR URL„ÅåÊú™Ë®≠ÂÆö„Åß„Åô'); return; }
      const uid  = await ensureAnonSafe();
      const url  = new URL(base);
      url.searchParams.set('spotId', spot);
      if (uid) url.searchParams.set('uid', uid);
      location.href = url.toString();
    });
  });
}

function showCameraChooser(){
  buildCameraChooserItems(); // Èñã„ÅÑ„ÅüÊôÇÁÇπ„ÅßÁîüÊàê
  $('#cameraChooserOverlay')?.classList.add('is-open');
  $('#cameraChooser')?.classList.add('is-open');
}
function hideCameraChooser(){
  $('#cameraChooserOverlay')?.classList.remove('is-open');
  $('#cameraChooser')?.classList.remove('is-open');
}

/* ====== Ë®ÄË™û UI „Éê„Ç§„É≥„Éâ ====== */
function bindLanguageUI(){
  const btn  = $('#langBtn');
  const menu = $('#langMenu');
  if (!btn || !menu) return;

  const toggle = ()=>{
    const open = menu.classList.toggle('is-open');
    btn.setAttribute('aria-expanded', open ? 'true' : 'false');
  };
  btn.addEventListener('click', (e)=>{ e.stopPropagation(); toggle(); });
  document.addEventListener('click', (e)=>{
    if (!menu.contains(e.target) && e.target !== btn) {
      menu.classList.remove('is-open');
      btn.setAttribute('aria-expanded','false');
    }
  });
  menu.querySelectorAll('button[data-lang]').forEach(b=>{
    b.addEventListener('click', ()=>{
      const lang = b.getAttribute('data-lang');
      setLang(lang);
      menu.classList.remove('is-open');
      btn.setAttribute('aria-expanded','false');
      applyI18n();            // „É©„Éô„É´Á≠âÂ∑Æ„ÅóÊõø„Åà
      // „Ç´„É°„É©ÈÅ∏Êäû„É¢„Éº„ÉÄ„É´„ÇíÈñã„ÅÑ„Å¶„ÅÑ„ÅüÂ†¥Âêà„ÅÆÂêçÊú≠„ÇíÂÜçÁîüÊàê
      if ($('#cameraChooser')?.classList.contains('is-open')) {
        buildCameraChooserItems();
      }
    });
  });
}

/* ====== Ëµ∑Âãï ====== */
async function boot(){
  bindLanguageUI();
  applyI18n();

  bindCompleteModalButtons();

  // „Äå„Ç´„É°„É©Ëµ∑Âãï„Äç‚Üí ÂÜôÁúü„Ç∞„É™„ÉÉ„Éâ
  $('#cameraBtn')?.addEventListener('click', showCameraChooser);
  $('#cameraChooserClose')?.addEventListener('click', hideCameraChooser);
  $('#cameraChooserOverlay')?.addEventListener('click', hideCameraChooser);

  // „Çµ„Ç§„É≥„Ç§„É≥ & „Çπ„Çø„É≥„ÉóÂèçÊò†
  const uid = await ensureAnonSafe();
  const stamps = await fetchStamps(uid);
  renderStampUI(stamps);
  await handleCompletionFlow(uid, stamps);

  // Âæ©Â∏∞ÊôÇ„Å´ÂÜçÂèçÊò†
  document.addEventListener('visibilitychange', async ()=>{
    if (document.visibilityState === 'visible') {
      const s = await fetchStamps(uid);
      renderStampUI(s);
      await handleCompletionFlow(uid, s);
      applyI18n(); // „Å§„ÅÑ„Åß„Å´„É©„Éô„É´„ÇÇÂêåÊúü
    }
  });
  window.addEventListener('pageshow', async ()=>{
    const s = await fetchStamps(uid);
    renderStampUI(s);
    await handleCompletionFlow(uid, s);
    applyI18n();
  });

  // data-ar-spot / #openAR-spotNÔºà„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºâ
  document.querySelectorAll('[data-ar-spot]').forEach(btn=>{
    btn.addEventListener('click', async (ev)=>{
      ev.preventDefault();
      const spot = btn.getAttribute('data-ar-spot');
      const base = EIGHTHWALL_URLS[spot];
      if (!base) { alert('„Åì„ÅÆ„Çπ„Éù„ÉÉ„Éà„ÅÆAR URL„ÅåÊú™Ë®≠ÂÆö„Åß„Åô'); return; }
      const uid = await ensureAnonSafe();
      const url = new URL(base);
      url.searchParams.set('spotId', spot);
      if (uid) url.searchParams.set('uid', uid);
      location.href = url.toString();
    });
  });
  for (let i=1;i<=6;i++){
    const el = document.getElementById('openAR-spot'+i);
    if (el && !el._arBound) {
      el._arBound = true;
      el.addEventListener('click', async (e)=>{
        e.preventDefault();
        const spot = 'spot'+i;
        const base = EIGHTHWALL_URLS[spot];
        if (!base) { alert('„Åì„ÅÆ„Çπ„Éù„ÉÉ„Éà„ÅÆAR URL„ÅåÊú™Ë®≠ÂÆö„Åß„Åô'); return; }
        const uid = await ensureAnonSafe();
        const url = new URL(base);
        url.searchParams.set('spotId', spot);
        if (uid) url.searchParams.set('uid', uid);
        location.href = url.toString();
      });
    }
  }
}

document.addEventListener('DOMContentLoaded', boot);
